terraform {
  required_providers {
    docker = {
      source = "kreuzwerker/docker"
    }
    phpipam = {
      source = "lord-kyron/phpipam"
    }
  }
}

provider "docker" {}

provider "phpipam" {
  app_id   = "terraform"
  endpoint = "https://10.9.23.63/api"
  password = "EfJCCiUkWQybuVHPPxTF67vX-dvCaC0l"
  username = ""
  insecure = true
}

# Number of Docker containers
variable "container_count" {
  default = 1 
}

/*
# Create Docker macvlan network with IPAM DHCP
resource "docker_network" "macvtap_network" {
  name   = "my_macvtap_net"
  driver = "macvlan"

  ipam_config { 
    subnet = "10.29.21.0/24"
    gateway = "10.29.21.1"
  }

  options = {
    parent = "vlan.21"
    mode = "private"
  }
}

# Use Alpine as the base image
resource "docker_image" "alpine" {
  name = "alpine:latest"
}
*/


# Get the subnet information from PHPIPAM
data "phpipam_subnet" "pod1" {
  subnet_address = "10.29.21.0"
  subnet_mask    = "24"
}

# Request an IP address from PHPIPAM for each container
resource "phpipam_first_free_address" "next_address" {
  count    = var.container_count
  subnet_id = data.phpipam_subnet.pod1.subnet_id
}

/*
# Create multiple Docker containers with IP addresses from PHPIPAM
resource "docker_container" "containers" {
  count   = var.container_count
  name    = "docker-container-${count.index + 1}"
  image   = docker_image.alpine.image_id
  restart = "always"

  # Keep the container running
  command = ["sleep", "infinity"]

  # Attach container to macvlan network with the IP address from PHPIPAM
  networks_advanced {
    name         = docker_network.macvtap_network.name
    #ipv4_address = phpipam_first_free_address.next_address[count.index].ip_address
  }
}
*/

# Reserve the IP address in PHPIPAM
resource "phpipam_address" "newip" {
  count       = var.container_count
  subnet_id   = data.phpipam_subnet.pod1.subnet_id
  ip_address  = phpipam_first_free_address.next_address[count.index].ip_address
  hostname    = "docker-container-${count.index + 1}"
  description = "docker-container-${count.index + 1}"

  lifecycle {
    ignore_changes = [
      subnet_id,
      ip_address,
   ]
  }
}
